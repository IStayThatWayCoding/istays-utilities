module.exports = {
    //default params
    default:{
        length:20,
        fullLength:10,
        full:"⬛️",
        empty:"⬜️",
        end:"⬛️",
        start:"⬛️",
        text:"{perc} {bar}",
        interval:500,
        add:1
    },
    progress: function(length=this.default.length, fullLength = this.default.fullLength, text= this.default.text, full=this.default.full, empty=this.default.empty, end=this.default.end, start=this.default.start) {
        //Just checking if we have all the args
        if (!length) throw new Error("Length can't be null or undefined !");

        //Setting the bar and beginning the real things
        let bar = '';
        for (let i = 0; i < length; i++) {
            bar += `${i > fullLength ? empty : i == fullLength ? end : i === 0 ? start : full}`
        }
        let temp = text;

        /**
         * ┌–––––––––––––┐
         * │  10  |  ?   │ full
         * │_____________│   /  
         * │  20  | 100  │ total
         * └–––––––––––––┘
         *   100 : 20 = 5
         * -> 10 * 5 = 50 -> 50%
         * -> 100/total*full = percentage
         */

        let percentage = Math.floor(100/length*fullLength)
        bar = format(temp, bar, percentage, length)
        return bar
    },
    setInterval: function(interval = this.default.interval, add = this.default.add,length=this.default.length, callback, text= this.default.text, full=this.default.full, empty=this.default.empty) {
        let added = 0;
        let int = setInterval(function() {
            added+= add
            if (added > length) {
                let txt = progress(length, length, text, full, empty);
                callback(txt)
                return clearInterval(int)
            }
            let txt = progress(length, added, text, full, empty);
            callback(txt)
        }, interval)
    },
    stylish: function(frames = ["|", "/", "–", "|", "\\"], callback, duration = 10000, interval = 100) {
        let actual = 0;
        let int = setInterval(function() {
            if (actual === frames.length-1) {
                actual = 0
            }else actual++
            let frame = frames[actual];
            callback(frame)
        }, interval)
        if (duration !== 0) {
            setTimeout(function() {
                clearInterval(int)
            }, duration)
        }

    }
}

function format(text, bar, perc, length) {text=text.replace(/{perc}/g, `${perc}%`);text = text.replace(/{bar}/g, `${bar}`);text = text.replace(/{length}/g, `${length}%`);return text;}
function progress(length, fullLength, text, full, empty) {if (!length) throw new Error("Length can't be null or undefined !");if (!fullLength) throw new Error("Full-length can't be null or undefined !");if (!full) throw new Error("Full can't be null or undefined !");if (!empty) throw new Error("Empty can't be null or undefined !");if (!text) throw new Error("Text can't be null or undefined !");let bar = '';for (let i = 0; i < length; i++) {bar += `${i > fullLength ? empty : full}`};let temp = text;let percentage = Math.floor(100/length*fullLength);bar = format(temp, bar, percentage, length);return bar;}