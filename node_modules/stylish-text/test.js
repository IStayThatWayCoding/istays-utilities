const bar = require(`./`)
bar.default.full = `=`;
bar.default.empty = ` `;
bar.default.text = `{bar} [{perc}]`
if (!process.argv[2]) return console.error("Please provide a type to test: frame or bar-interval or bar\n")
if (process.argv[2] === `frame`) {

    bar.stylish([`|`, `/`, `–`, `\\`, `|`, `/`, `–`, `\\`], function(txt) {
        console.clear()
        console.log(`
┌───┐         ┌───┐
│ ${txt} │ Loading │ ${txt} │
└───┘         └───┘`)
    }, 0, 100)



}

else if (process.argv[2] === `frame-2`) {
    bar.stylish([
`
┌──────┐
│O     │
└──────┘`, `
┌──────┐
│ o    │
└──────┘`, `
┌──────┐
│  o   │
└──────┘`, `
┌──────┐
│   o  │
└──────┘`, `
┌──────┐
│    o │
└──────┘`, `
┌──────┐
│     O│
└──────┘`, `
┌──────┐
│    o │
└──────┘`, `
┌──────┐
│   o  │
└──────┘`, `
┌──────┐
│  o   │
└──────┘`, `
┌──────┐
│ o    │
└──────┘`], function(txt) {
        console.clear()
        console.log(txt)
    }, 0, 140)
}
else if (process.argv[2] === `frame-1`) {
    const stages = [
` O
/ | \\
  |
 / \\
 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\

 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\


 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\




 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\



 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\


 ––––
|    |                                                                                                          `,
` O
/ | \\
  |
 / \\

 ––––
|    |                                                                                                          `
    ]
    const truc = [
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   -----  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (  _----   )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   __---  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   ___--  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   ____-  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   _____  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   ____-  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   ___--  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   __---  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   _----  )
        (          )
        (––––––––––)`,
        `
        (––––––––––)
        (          )
        (   o   o  )
        (     z    )
        (   -----  )
        (          )
        (––––––––––)`,
        ]
    bar.stylish(truc, function(txt) {
        console.clear()
        console.log(txt)
    }, 0, 100)
}
else if (process.argv[2] === `bar-interval`) {
    bar.setInterval(150, 1, 20, function(bar) { 
        console.clear()
        console.log(bar)
    })
}
else if (process.argv[2] === `bar`) {
    if (!process.argv[3]) return console.error("Please provide a bar length ! ")
    if (!process.argv[4]) return console.error("Please provide the bar filled length ! ")
    let length = parseInt(process.argv[3])
    let fill = parseInt(process.argv[4])
    console.log(bar.progress(length, fill))
}
